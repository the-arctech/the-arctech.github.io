<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>{arctech}</title><link>https://the-arctech.github.io/</link><description>The greatest blog ever.</description><atom:link href="https://the-arctech.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2019 &lt;a href="mailto:arctech@tuta.io"&gt;arctech&lt;/a&gt; </copyright><lastBuildDate>Thu, 10 Jan 2019 20:27:21 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>OverTheWire: Bandit - Walkthrough</title><link>https://the-arctech.github.io/posts/overthewire-bandit-walkthrough/</link><dc:creator>arctech</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt; NOTE: Levels 24-35 have been added to Bandit, and I will be including them in a 
separate walkthrough &lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Using this guide:&lt;/h3&gt;
&lt;p&gt;If you are copy/pasting these solutions, YOU ARE WRONG! That is NOT what this walkthrough is for. If you read the documentation, excercised your google-fu, experimented and still don't know how to proceed.. then you refer to the number and solution below. See what the correct answer is, figure out WHY it is the correct answer, and only then type it in yourself and continue. Anything short of this is doing you no favors.&lt;/p&gt;
&lt;h4&gt;OverTheWire&lt;/h4&gt;
&lt;p&gt;Overthewire.org hosts a litany of machines available for those who desire to learn or practice 
their infosec skills. Their boxes start at 'no skill' and increase in difficulty. OTW provides 
this service for free to the public, so I strongly encourange anyone who 
uses or benefits from it to drop them a donation to help keep them up! &lt;/p&gt;
&lt;h4&gt;Bandit&lt;/h4&gt;
&lt;p&gt;The bandit machine is an introductory box used to teach the basics of Linux and server 
administration. It is accessed and completed through SSH. To start the 
challenges, all you need to do is drop &lt;code&gt;ssh bandit0@bandit.labs.overthewire.org -p 2220&lt;/code&gt; 
into your 
terminal. If you are having trouble or struggling or can't figure out how you are supposed to 
progress to the nexel stage &lt;a href="https://overthewire.org/wargames/bandit/"&gt;overthewire&lt;/a&gt; has a level by level set of 
instructions.&lt;/p&gt;
&lt;h4&gt;The Walkthrough:&lt;/h4&gt;
&lt;p&gt;The majority of the 'levels' on bandit can be completed in under 1 minute. Yes, this box is 
that easy. As such, I'm only going to provide you with the minimum amount of information needed 
to complete each level. If you don't understand how the tool or command works I STRONGLY 
encourage you to read the informative links provided for each level on &lt;a href="https://overthewire.org/wargames/bandit"&gt;overthewire&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;
bandit0: cat readme
bandit1: nano + CTRL+R +'-'
bandit2: cat spaces\ in\ this\ filename
bandit3: ls -la inhere
bandit4: find inhere ! -executable -readable
bandit5: find inhere -readable ! -executable -size 1033c
bandit6: find / -user bandit7 -group bandit6 -size 33c
bandit7: cat data.txt | grep millionth
bandit8: cat data.txt | sort | uniq -u
bandit9: strings data.txt | grep ==
bandit10: base64 -d data.txt
bandit11: cat data.txt | tr a-zA-Z n-za-mN-ZA-M (OR rot13.com)
bandit12: -- 
    cat data.txt | sort | uniq -u
    file data.txt
    zcat data.txt &amp;gt; datanew
    file datanew
    bzip2 -d datanew
    file datanew.out
    zcat datanew.out &amp;gt; datanew
    file datanew
    tar -xvf datanew
    file data5.bin
    tar -xvf data5.bin
    file data6.bin
    bzip2 -d data6.bin
    file data6.bin.out
    tar -xvf data6.bin.out
    file data8.bin
    zcat data8.bin &amp;gt; holycrap
    file holycrap
    cat holycrap
bandit13: ssh -i sshkey.private bandit14@localhost  (This is an internal pivot!!)
bandit14: telnet localhost 30000 
        * submit password of current level to the server
bandit15: openssl s_client -connect localhost:30001 
        * submit current level pass again
bandit16: --
    nmap -sV -p 31000-32000 localhost
    openssl s_client -connect localhost:31790
    (submit current level pass)
    mkdir /tmp/obfuscated-name
    cd /tmp/obfuscated-name
     * copy RSA key from SSL connection
    vi sshkey.private
     * save it
    chmod 600 sshkey.private
    ssh -i sshkey.private bandit12@localhost      
bandit17: diff passwords.new passwords.old
bandit18: ssh bandit18@bandit.labs.overthewire.org cat readme
bandit19: ./bandit20-do cat /etc/bandit_pass/bandit20
bandit20: --
    nc -l 7331
      * CTRL+Z
    ./suconnect 7331
      * CTRL+Z
    jobs 1
      * submit current password
      * CTRL+Z
    jobs 2
      * suconnect pushes password
      * CTRL+Z
    jobs 1
    (please make sure all processes are stopped before you exit!!)
bandit21: --
    cat /usr/bin/cronjob_bandit22.sh
    cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
bandit22: --
    cat /etc/cron.d/cronjob_bandit23
    cat /usr/bin/cronjob_bandit23.sh
    sh /usr/bin/cronjob_bandit23.sh
    echo I am user bandit23 | md5sum | cut -d ' ' -f 1
bandit23: --
    cat /etc/cron.d/cronjob_24.sh
    mkdir /tmp/skjdhf
    cd /tmp/skjdhf
    echo "cat /etc/bandit_pass/bandit24 &amp;gt;&amp;gt; /tmp/skjdhf/pass.txt" &amp;gt; myscript.sh
    chmod 777 myscript.sh
    chmod -R 777 /tmp/skjdhf
    cp myscript.sh /var/spool/bandit24
        * wait ~1min
    cat pass.txt

&lt;/pre&gt;&lt;/div&gt;</description><category>ctf</category><category>hacking</category><category>overthewire</category><category>walkthrough</category><guid>https://the-arctech.github.io/posts/overthewire-bandit-walkthrough/</guid><pubDate>Thu, 10 Jan 2019 17:05:12 GMT</pubDate></item><item><title>Build this blog.</title><link>https://the-arctech.github.io/posts/build-this-blog/</link><dc:creator>arctech</dc:creator><description>&lt;div&gt;&lt;h2&gt;Why Nikola, why Python?&lt;/h2&gt;
&lt;p&gt;Good question, relatively simple answer. Both Python and Nikola are the easiest tools you can 
use when creating a simple and static blog. The exception being the application of Ruby and 
Jekyll when using github pages. That being said, and as much as I do enjoy Ruby, I prefer to 
keep my languages and frameworks consistent professionally and personally. The added benefit of 
Github Pages being able to host static content at no cost (and also not having to maintain a 
server) seal the deal on this setup for me. &lt;/p&gt;
&lt;h3&gt;What do I need?&lt;/h3&gt;
&lt;p&gt;Im going to make the assumption you are running a Linux machine. If you are not, you have other 
things you should be addressing before you worry about creating a blog. If you are, then you'll 
need to get these packages: &lt;code&gt;nikola ghp-import2 python-markdown git&lt;/code&gt;. These packages are 
available in most distro repositories, as well as through pip. The common practice when working 
on projects such as this is to also get &lt;code&gt;virtualenv&lt;/code&gt; and install your libraries/software in 
the virtual environment, but a development VM or your base OS will be fine as well. &lt;/p&gt;
&lt;h3&gt;Set up your Github repository.&lt;/h3&gt;
&lt;p&gt;This is straightforward for anyone who has used github before. If not, there are tutorials on 
Github showing you how to set up your "Github Pages" (username.github.io). Dont worry about 
initializing the repo, the readme, or ignore file. We will do that in the next step. All you 
need to do is create the repository.&lt;/p&gt;
&lt;h3&gt;Hold my beer.&lt;/h3&gt;
&lt;p&gt;In the next ~7min you're going to have a functioning blog on Github. Its so easy you're going 
to wonder why you havent done it before. So easy in fact, I'm going to give the instructions in 
a numbered list.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use Nikola to iniate the blog (which creates a directory). This will populate the folder 
with all the framework you need to get started.
&lt;code&gt;nikola init &amp;lt;username&amp;gt;.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Change into the new folder and initialize it as a github repository.
&lt;code&gt;git init .&lt;/code&gt;
&lt;code&gt;git remote add origin git@github.com:&amp;lt;user&amp;gt;/&amp;lt;repository&amp;gt;.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;conf.py&lt;/code&gt; in your editor of choice (which is vim, right?). Make sure the options 
you gave when initializing nikola are correct, and make sure your github settings are as 
follows:
&lt;pre&gt;&lt;code&gt;GITHUB_SOURCE_BRANCH = 'src'
GITHUB_DEPLOY_BRANCH = 'master'
GITHUB_REMOTE_NAME = 'origin'
GITHUB_COMMIT_SOURCE = True&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Create the &lt;code&gt;.gitignore&lt;/code&gt; file and populate it with &lt;code&gt;cache .doit.db __pycache__ 
output&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a test post with &lt;code&gt;nikola new_post -e&lt;/code&gt;. This will open your text editor of choice 
(vim, right?) and pre-populate it with the necessary data. Enter whatever text you wish, make 
sure its saved in the &lt;code&gt;posts/&lt;/code&gt; directory, and save it.&lt;/li&gt;
&lt;li&gt;Build your site with &lt;code&gt;nikola build&lt;/code&gt; and correct any errors.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;WITNESS ME!&lt;/h3&gt;
&lt;p&gt;If you followed the previous steps correctly we can prop up a nikola test server, view our 
results, and when satisfied push it to Github.
&lt;code&gt;nikola serve --browser&lt;/code&gt;
This will run a local server and open your default browser to your blog's landing page. Viola! 
Hit CTRL+C to shut down the server.
Now, when you're ready to go live simply use Nikola's built in tool &lt;code&gt;nikola github_deploy&lt;/code&gt; 
to send it off to Github. You will be prompted for your username/password if not token'ed up.&lt;/p&gt;
&lt;h2&gt;Enjoy&lt;/h2&gt;
&lt;p&gt;P.S. - You can download themes with &lt;code&gt;nikola theme -i &amp;lt;theme&amp;gt;&lt;/code&gt; and use them by adding them 
in your &lt;code&gt;conf.py&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</description><category>blog</category><category>github</category><category>nikola</category><category>python</category><guid>https://the-arctech.github.io/posts/build-this-blog/</guid><pubDate>Wed, 09 Jan 2019 05:00:00 GMT</pubDate></item></channel></rss>